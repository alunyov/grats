"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateGratsOptions = void 0;
var DEFAULT_SDL_HEADER = "# Schema generated by Grats (https://grats.capt.dev)\n# Do not manually edit. Regenerate by running `npx grats`.";
var DEFAULT_TYPESCRIPT_HEADER = "/**\n * Executable schema generated by Grats (https://grats.capt.dev)\n * Do not manually edit. Regenerate by running `npx grats`.\n */";
// TODO: Make this return diagnostics
function validateGratsOptions(options) {
    var _a, _b;
    var gratsOptions = __assign({}, ((_b = (_a = options.raw) === null || _a === void 0 ? void 0 : _a.grats) !== null && _b !== void 0 ? _b : {}));
    if (gratsOptions.nullableByDefault === undefined) {
        gratsOptions.nullableByDefault = true;
    }
    else if (typeof gratsOptions.nullableByDefault !== "boolean") {
        throw new Error("Grats: The Grats config option `nullableByDefault` must be a boolean if provided.");
    }
    if (gratsOptions.strictSemanticNullability === undefined) {
        gratsOptions.strictSemanticNullability = false;
    }
    else if (typeof gratsOptions.strictSemanticNullability !== "boolean") {
        throw new Error("Grats: The Grats config option `strictSemanticNullability` must be a boolean if provided.");
    }
    else if (gratsOptions.strictSemanticNullability &&
        !gratsOptions.nullableByDefault) {
        throw new Error("Grats: The Grats config option `strictSemanticNullability` cannot be true if `nullableByDefault` is false.");
    }
    if (gratsOptions.reportTypeScriptTypeErrors === undefined) {
        gratsOptions.reportTypeScriptTypeErrors = false;
    }
    else if (typeof gratsOptions.reportTypeScriptTypeErrors !== "boolean") {
        throw new Error("Grats: The Grats config option `reportTypeScriptTypeErrors` must be a boolean if provided.");
    }
    if (gratsOptions.graphqlSchema === undefined) {
        gratsOptions.graphqlSchema = "./schema.graphql";
    }
    else if (typeof gratsOptions.graphqlSchema !== "string" &&
        gratsOptions.graphqlSchema !== null) {
        throw new Error("Grats: The Grats config option `graphqlSchema` must be a string if provided.");
    }
    if (gratsOptions.tsSchema === undefined) {
        gratsOptions.tsSchema = "./schema.ts";
    }
    else if (typeof gratsOptions.tsSchema !== "string" &&
        gratsOptions.tsSchema !== null) {
        throw new Error("Grats: The Grats config option `tsSchema` must be a string if provided.");
    }
    if (gratsOptions.schemaHeader === undefined) {
        gratsOptions.schemaHeader = DEFAULT_SDL_HEADER;
    }
    else if (typeof gratsOptions.schemaHeader !== "string" &&
        gratsOptions.schemaHeader !== null) {
        throw new Error("Grats: The Grats config option `schemaHeader` must be a string or `null` if provided.");
    }
    if (gratsOptions.tsSchemaHeader === undefined) {
        gratsOptions.tsSchemaHeader = DEFAULT_TYPESCRIPT_HEADER;
    }
    else if (typeof gratsOptions.tsSchemaHeader !== "string" &&
        gratsOptions.tsSchemaHeader !== null) {
        throw new Error("Grats: The Grats config option `tsSchemaHeader` must be a string or `null` if provided.");
    }
    return __assign(__assign({}, options), { raw: __assign(__assign({}, options.raw), { grats: gratsOptions }) });
}
exports.validateGratsOptions = validateGratsOptions;
